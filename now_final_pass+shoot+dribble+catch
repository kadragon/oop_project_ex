import pygame
from pygame import *
from time import sleep

baller = [0, 0, 0, 0, 0, 0]
Green = (100, 250, 100)
pad_width = 1024
pad_height = 512
player_x=0
player_y=0
RED = (255, 0, 0)

x = [0 for i in range(6)]
y = [0 for i in range(6)]
ball_x = 0
ball_y = 0

def ball_move(x, y):
    global dis, image_ball, ball_x, ball_y
    ball_x = x
    ball_y = y
    gamepad.blit(image_ball, (x,y))

def ball_direction(player_x, player_y, ball_x, ball_y):
    if player_x - ball_x > 0:
        if player_y- ball_y > 0:
            return 'Ball LeftUp'
        if player_y- ball_y == 0:
            return 'Ball Left'
        if player_y- ball_y < 0:
            return 'Ball LeftDown'
    if player_x - ball_x == 0:
        if player_y- ball_y > 0:
            return 'Ball Up'
        if player_y- ball_y == 0:
            return 'Ball Stop'
        if player_y- ball_y < 0:
            return 'Ball Down'
    if player_x - ball_x < 0:
        if player_y- ball_y > 0:
            return 'Ball RightUp'
        if player_y- ball_y == 0:
            return 'Ball Right'
        if player_y- ball_y < 0:
            return 'Ball RightDown'

def ball_pass(player_x, player_y, dir, shoot_able):
    print("shootable = ", shoot_able)
    if shoot_able != 0:
        if dir == 'Ball Left':
            for i in range(1,50):
                ball_move(player_x-12*i, player_y)
                pygame.display.update()
        if dir == 'Ball Right':
            for i in range(1,50):
                ball_move(player_x+12*i, player_y)
                pygame.display.update()
        if dir == 'Ball Up':
            for i in range(1,50):
                ball_move(player_x, player_y-12*i)
                pygame.display.update()
        if dir == 'Ball Down':
            for i in range(1,50):
                ball_move(player_x, player_y+12*i)
                pygame.display.update()
        if dir == 'Ball LeftUp':
            for i in range(1,50):
                ball_move(player_x-12*i, player_y-12*i)
                pygame.display.update()
        if dir == 'Ball RightUp':
            for i in range(1,50):
                ball_move(player_x+12*i, player_y-12*i)
                pygame.display.update()
        if dir == 'Ball LeftDown':
            for i in range(1,50):
                ball_move(player_x-12*i, player_y+12*i)
                pygame.display.update()
        if dir == 'Ball RightDown':
            for i in range(1,50):
                ball_move(player_x+12*i, player_y+12*i)
                pygame.display.update()
    return

def dispMessage(text):
    global gamepad
    textfont = pygame.font.Font('freesansbold.ttf', 80)
    text = textfont.render(text, True, RED)
    textpos = text.get_rect()
    textpos.center = (pad_width / 2, pad_height / 2)
    gamepad.blit(text, textpos)
    pygame.display.update()
    sleep(2)
    runGame()

def goalchcker():
    global ball_y, ball_x, gamepad
    if ((0 < ball_x < 75) or (949< ball_x < 1024)) and (206 < ball_y < 306):
        print("goal")
        dispMessage('Goal!!')

def ballchecker(shoot, xchange, ychange):
    global x, y, ball_x, ball_y, baller
    for i in range(0, 6):
        baller[i]=0
    for i in range(6):
        if (abs(ball_x - x[i]) <= 20 and abs(ball_y - y[i]) <= 20) and (shoot ==0):
            ball_x = x[i]
            ball_y = y[i]
        elif(abs(ball_x - x[i]) <= 20 and abs(ball_y - y[i]) <= 20) and (shoot ==1):
            ball_x = x[i] + 2 * xchange
            ball_y = y[i] + 2 * ychange
        if abs(ball_x - x[i]) <= 30 and abs(ball_y - y[i]) <= 30:
            baller[i]=1



def show_dis_play():
    global x, y, ball_x, ball_y
    global gamepad, image, image_ball, baller

    for i in range(6):
        gamepad.blit(image[i], (x[i], y[i]))
    gamepad.blit(image_ball, (ball_x, ball_y))


def runGame():
    global player_x, player_y, x, y, ball_x, ball_y, gamepad, image, image_ball, ball_y, ball_x, baller
    shooter_x = 0
    shooter_y = 0


    for i in range(6):
        x[0] = 205
        y[0] = 384

        x[1] = 410
        y[1] = 256

        x[2] = 615
        y[2] = 256

        x[3] = 205
        y[3] = 128

        x[4] = 820
        y[4] = 384

        x[5] = 820
        y[5] = 128
    ball_x = 512
    ball_y = 256

    x_change = [0 for i in range(6)]
    y_change = [0 for i in range(6)]
    ball_x_change = 0
    ball_y_change = 0

    crashed = False

    while not crashed:

        for event in pygame.event.get():
            shoot_able = 0
            ballchecker(0, 0, 0)
            for i in  range(0, 6):
                if baller[i] ==1:
                    print("baller now=", i)
                    shoot_able = 1
                    shooter_x = x[i]
                    shooter_y = y[i]

            dir = ball_direction(shooter_x, shooter_y, ball_x, ball_y)
            print(dir)
            if event.type == pygame.QUIT:
                crashed = True
                break

            key = [[K_2, K_q, K_w, K_e], [K_5, K_r, K_t, K_y], [K_8, K_u, K_i, K_o], [K_s, K_z, K_x, K_c],
                   [K_g, K_v, K_b, K_n], [K_UP, K_LEFT, K_DOWN, K_RIGHT]]

            if event.type == pygame.KEYDOWN:
                for i in range(6):
                    player = key[i]
                    for j in range(4):
                        direction = player[j]
                        if event.key == direction:
                            if j is 0:
                                y_change[i] = -5
                                ball_y_change = -10
                            if j is 1:
                                x_change[i] = -5
                                ball_x_change = -10
                            if j is 2:
                                y_change[i] = 5
                                ball_y_change = 10
                            if j is 3:
                                x_change[i] = 5
                                ball_x_change = 10

            if event.type == pygame.KEYUP:
                for i in range(6):
                    player = key[i]
                    for j in range(4):
                        direction = player[j]
                        if event.key == direction:
                            if j % 2:
                                x_change[i] = 0
                                ball_x_change = 0
                            else:
                                y_change[i] = 0
                                ball_y_change = 0

            shoot = 0
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    print("Ball Shoot")
                    print(i)
                    ball_pass(ball_x, ball_y, dir, shoot_able)
                    shoot=1


        for i in range(6):
            x[i] += x_change[i]

            if x[i] < 0:
                x[i] = 0
            if x[i] > 1014:
                x[i] = 1014

            y[i] += y_change[i]

            if y[i] < 10:
                y[i] = 10
            if y[i] > 502:
                y[i] = 502

        for i in range(0, 6):
            if baller[i] == 1:
                ball_x += ball_x_change
                ball_y += ball_y_change
                if ball_x < 10:
                    ball_x = 10
                if ball_x > 1014:
                    ball_x = 1014
                if ball_y < 10:
                    ball_y = 10
                if ball_y > 502:
                    ball_y = 502
        print("ball position=", ball_x, ball_y)
        ballchecker(shoot, ball_x_change, ball_y_change)
        goalchcker()
        gamepad.fill(Green)
        show_dis_play()
        pygame.display.update()
        clock.tick(60)

    pygame.quit()
    quit()


def initGame():
    global gamepad, image, image_ball, clock, image_goalsign

    pygame.init()
    gamepad = pygame.display.set_mode((pad_width, pad_height))
    image = [0 for i in range(6)]
    pygame.display.set_caption('PyFootball')

    for i in range(6):
        image[i] = pygame.image.load('image%d.png' % (i + 1))
    image_ball = pygame.image.load('image_ball.png')
    image_goalsign = pygame.image.load('image_goalsign.png')

    clock = pygame.time.Clock()
    runGame()


initGame()
